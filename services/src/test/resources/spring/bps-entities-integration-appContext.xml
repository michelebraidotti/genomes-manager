<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">

	<!-- Enables the @PersistenceContext annotation -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	<!-- to use the spring database errorhandling -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!-- get some properties -->
	<bean
		id="propertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/${env}/database.properties</value>
			</list>
		</property>
		<property
			name="ignoreUnresolvablePlaceholders"
			value="true" />
	</bean>

	<!-- our datasource -->
	<bean
		id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property
			name="driverClassName"
			value="${datasource.driverClassName}" />
		<property
			name="url"
			value="${datasource.url}" />
		<property
			name="username"
			value="${datasource.username}" />
		<property
			name="password"
			value="${datasource.password}" />
	</bean>

	<!-- let hibernate be in between the database and JPA -->
	<bean
		id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property
			name="database"
			value="${jpa.database}" />
		<property
			name="showSql"
			value="${jpa.showSql}" />
		<property
			name="generateDdl"
			value="${jpa.generateDdl}" />
		<property
			name="databasePlatform"
			value="${jpa.databasePlatform}" />
	</bean>

	<!-- The entitymanager -->
	<bean
		id="entityRepositoryEntityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:dataSource-ref="dataSource">
		<property name="packagesToScan">
			<list>
				<value>com.bps.entities.domain.entities</value>
				<value>com.bps.bpscommons.domain.entities</value>
				<value>com.bps.dataexchange.domain.entities</value>
				<value>com.bps.handshakes.domain</value>
			</list>
		</property>
		<property
			name="jpaVendorAdapter"
			ref="jpaVendorAdapter" />
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.showSql">${hibernate.showSql}</prop>
				<prop key="hibernate.formatSql">${hibernate.formatSql}</prop>
			</props>
		</property>
	</bean>

	<!-- Configures the transaction manager -->
	<bean
		id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property
			name="entityManagerFactory"
			ref="entityRepositoryEntityManagerFactory" />
	</bean>
</beans>

